#!/usr/bin/env ruby
# frozen_string_literal: true

require 'logger'
require 'netrc'
require 'octokit'
require 'pinboard'

require 'pinboard_fixup_github_titles'
include PinboardFixupGithubTitles

logger = Logger.new(STDERR)
logger.progname = File.basename(__FILE__)
desired_log_level = ENV.fetch('LOG_LEVEL', 'INFO')

begin
  logger.level = Logger::Severity.const_get(desired_log_level)
rescue NameError
  logger.level = Logger::Severity::WARN
  logger.warn("Error evaluating log level #{desired_log_level}. Using #{Logger::Severity.constants[logger.level]} instead.")
end

if pinboard_api_token = ENV['PINBOARD_API_TOKEN']
  pinboard = Pinboard::Client.new(token: pinboard_api_token)
  logger.info "Logged on to Pinboard as #{pinboard_api_token.split(':').first}"
else
  logger.error 'Pinboard API token missing.'
  exit 1
end

# Authentication is required due to Github's API rate limit
begin
  github = Octokit::Client.new(GithubCredentialsResolver.new.resolve)
rescue GithubCredentialsResolver::MissingCredentials
  logger.error $ERROR_INFO.message
  exit 2
end

if github.login
  logger.info "Logged on to github.com as #{github.user.login}"
else
  logger.error 'Login to github failed. Check your credentials.'
  exit 3
end

posts = pinboard.posts(meta: true)
logger.info "Processing #{posts.size} bookmarks"

stats = Stats.new
stats.gauge(:total, posts.size)

# rubocop:disable Metrics/BlockLength
posts.each do |post|
  begin
    unless md = %r{//github.com/([^/]+/[^/]+)}.match(post.href)
      stats.increment(:not_applicable)
      next
    end

    repo = github.repo(md[1])

    if repo.description.nil? || repo.description.empty?
      stats.increment(:empty)
      logger.warn "#{repo.name}: Skipping because there is no description in the github repo."
      next
    end

    canonical_description = "#{repo.name}: #{repo.description}"

    if post.description == canonical_description
      stats.increment(:up_to_date)
      logger.info "#{repo.name}: Up to date"
      next
    end

    logger.info "#{repo.name}: Updating from '#{post.description}' to '#{canonical_description}'"

    tags = post.tag
    tags << 'github' unless tags.include?('github')
    tags << 'pinboard-fixup-github-titles' unless tags.include?('pinboard-fixup-github-titles')
    tags << repo.language

    pinboard.add(
      url: post.href,
      description: canonical_description,
      extended: post.extended,
      tags: tags,
      replace: 'yes',
      shared: post.shared ? post.shared : 'yes',
      toread: post.toread,
    )

    stats.increment(:updated)
  rescue
    stats.increment(:errors)
    logger.error "#{post.href} #{$ERROR_INFO.message}"
  end
end

logger.info "Done: #{stats}"
